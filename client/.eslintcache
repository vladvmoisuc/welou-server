[{"D:\\Proiecte\\welou website\\client\\src\\containers\\Chat\\index.js":"1","D:\\Proiecte\\welou website\\client\\src\\containers\\Meet\\index.js":"2","D:\\Proiecte\\welou website\\client\\src\\containers\\EditProfile\\index.js":"3","D:\\Proiecte\\welou website\\client\\src\\containers\\Match\\index.js":"4","D:\\Proiecte\\welou website\\client\\src\\App.js":"5","D:\\Proiecte\\welou website\\client\\src\\containers\\Notifications\\index.js":"6","D:\\Proiecte\\welou website\\client\\src\\containers\\Profile\\index.js":"7","D:\\Proiecte\\welou website\\client\\src\\utils\\hooks.js":"8","D:\\Proiecte\\welou website\\client\\src\\utils\\api.js":"9","D:\\Proiecte\\welou website\\client\\src\\reportWebVitals.js":"10","D:\\Proiecte\\welou website\\client\\src\\containers\\Description\\index.js":"11","D:\\Proiecte\\welou website\\client\\src\\containers\\Connect\\index.js":"12","D:\\Proiecte\\welou website\\client\\src\\components\\InterestsList\\index.jsx":"13","D:\\Proiecte\\welou website\\client\\src\\containers\\HobbiesPreferences\\index.js":"14","D:\\Proiecte\\welou website\\client\\src\\containers\\MusicPreferences\\index.js":"15","D:\\Proiecte\\welou website\\client\\src\\constants\\counties.js":"16","D:\\Proiecte\\welou website\\client\\src\\index.js":"17","D:\\Proiecte\\welou website\\client\\src\\containers\\SeriesPreferences\\index.js":"18","D:\\Proiecte\\welou website\\client\\src\\containers\\BioPreferences\\index.js":"19","D:\\Proiecte\\welou website\\client\\src\\containers\\SportsPreferences\\index.js":"20","D:\\Proiecte\\welou website\\client\\src\\components\\MenuBar\\index.jsx":"21","D:\\Proiecte\\welou website\\client\\src\\constants\\suggestions.js":"22","D:\\Proiecte\\welou website\\client\\src\\containers\\InterestsPreferences\\index.js":"23","D:\\Proiecte\\welou website\\client\\src\\utils\\strings.js":"24","D:\\Proiecte\\welou website\\client\\src\\components\\WalkthroughHeader\\index.jsx":"25","D:\\Proiecte\\welou website\\client\\src\\containers\\BooksPreferences\\index.js":"26","D:\\Proiecte\\welou website\\client\\src\\components\\Notification\\index.jsx":"27","D:\\Proiecte\\welou website\\client\\src\\utils\\index.js":"28","D:\\Proiecte\\welou website\\client\\src\\api\\firebase.js":"29","D:\\Proiecte\\welou website\\client\\src\\routes.js":"30"},{"size":6959,"mtime":1612667940460,"results":"31","hashOfConfig":"32"},{"size":4362,"mtime":1612666447531,"results":"33","hashOfConfig":"32"},{"size":2213,"mtime":1612982668030,"results":"34","hashOfConfig":"32"},{"size":4659,"mtime":1612981812225,"results":"35","hashOfConfig":"32"},{"size":2690,"mtime":1612670014745,"results":"36","hashOfConfig":"32"},{"size":3639,"mtime":1612831485661,"results":"37","hashOfConfig":"32"},{"size":1343,"mtime":1612666337032,"results":"38","hashOfConfig":"32"},{"size":4118,"mtime":1612982668029,"results":"39","hashOfConfig":"32"},{"size":150,"mtime":1612831998521,"results":"40","hashOfConfig":"32"},{"size":362,"mtime":1606528385738,"results":"41","hashOfConfig":"32"},{"size":3065,"mtime":1612985501263,"results":"42","hashOfConfig":"32"},{"size":3525,"mtime":1612983582144,"results":"43","hashOfConfig":"32"},{"size":1063,"mtime":1612104634303,"results":"44","hashOfConfig":"32"},{"size":2294,"mtime":1612100878105,"results":"45","hashOfConfig":"32"},{"size":2471,"mtime":1608055269119,"results":"46","hashOfConfig":"32"},{"size":1826,"mtime":1606665276994,"results":"47","hashOfConfig":"32"},{"size":567,"mtime":1609196050376,"results":"48","hashOfConfig":"32"},{"size":2320,"mtime":1608158847529,"results":"49","hashOfConfig":"32"},{"size":3944,"mtime":1612982668029,"results":"50","hashOfConfig":"32"},{"size":2311,"mtime":1608055349380,"results":"51","hashOfConfig":"32"},{"size":901,"mtime":1608769541751,"results":"52","hashOfConfig":"32"},{"size":41932,"mtime":1606853517520,"results":"53","hashOfConfig":"32"},{"size":1813,"mtime":1612391033657,"results":"54","hashOfConfig":"32"},{"size":528,"mtime":1606664521335,"results":"55","hashOfConfig":"32"},{"size":632,"mtime":1606958469909,"results":"56","hashOfConfig":"32"},{"size":2222,"mtime":1612100867048,"results":"57","hashOfConfig":"32"},{"size":805,"mtime":1608767808594,"results":"58","hashOfConfig":"32"},{"size":305,"mtime":1606865088591,"results":"59","hashOfConfig":"32"},{"size":2195,"mtime":1612992865306,"results":"60","hashOfConfig":"32"},{"size":2223,"mtime":1612303552082,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"hci5mh",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"125"},"D:\\Proiecte\\welou website\\client\\src\\containers\\Chat\\index.js",["155","156","157","158"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport TopBar from '../../components/TopBar';\r\nimport { Input, Button } from 'antd';\r\nimport { SendOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport api from '../../utils/api';\r\nimport { loadUserData } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst Chat = (props) => {\r\n  const { user, messages, history, chatData, conversationPartner } = props;\r\n  const [message, setMessage] = useState('');\r\n  const messagesContainer = useRef(null);\r\n\r\n  const handleCurrentMessage = (event) => {\r\n    const { value } = event.target;\r\n\r\n    setMessage(value);\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (message !== '') {\r\n      try {\r\n        await api.post('/chat/message', {\r\n          text: message,\r\n          senderId: user._id,\r\n          receiverId: conversationPartner._id,\r\n          documentId: user.currentChatId,\r\n        });\r\n\r\n        setMessage('');\r\n\r\n        await api.post('/notification', {\r\n          token: conversationPartner.fcmToken,\r\n          title: `${user.firstName} ${user.lastName} È›i-a trimis un mesaj`,\r\n          message: `${message.substring(0, 30)}...`,\r\n          icon: user.avatar,\r\n          type: 'message',\r\n        });\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  const scrollToBottom = () => {\r\n    const hasValidChat =\r\n      user &&\r\n      user.currentChatId &&\r\n      !!chatData &&\r\n      chatData.hasLeft === '' &&\r\n      !!messagesContainer &&\r\n      !!messagesContainer.current &&\r\n      messagesContainer.current.scrollTo;\r\n\r\n    if (hasValidChat) {\r\n      setTimeout(() => {\r\n        messagesContainer.current.scrollTo({\r\n          top: messagesContainer.current.scrollHeight,\r\n          behavior: 'smooth',\r\n        });\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  // Handle match message\r\n  useEffect(() => {\r\n    if (user && user.currentChatId && chatData && chatData.matches) {\r\n      const hasPresentedMatchMessage =\r\n        messages &&\r\n        messages.find(\r\n          ({ text }) =>\r\n            text === 'Avem o potrivire. AmÃ¢ndoi doriÈ›i sÄƒ ieÈ™iÈ›i Ã®mpreunÄƒ!'\r\n        );\r\n      const hasMatchingUsers = Object.keys(chatData.matches).every(\r\n        (key) => chatData.matches[key]\r\n      );\r\n\r\n      const sendMatchMessage = async () => {\r\n        await api.post('/chat/message', {\r\n          text: 'Avem o potrivire. AmÃ¢ndoi doriÈ›i sÄƒ ieÈ™iÈ›i Ã®mpreunÄƒ!',\r\n          senderId: user._id,\r\n          receiverId: conversationPartner._id,\r\n          documentId: user.currentChatId,\r\n          type: 'computer',\r\n        });\r\n      };\r\n\r\n      if (chatData && hasMatchingUsers && !hasPresentedMatchMessage) {\r\n        sendMatchMessage();\r\n      }\r\n    }\r\n  }, [chatData.matches]);\r\n\r\n  // Scroll to bottom when a new message is sent\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    loadUserData(props);\r\n    scrollToBottom();\r\n  }, []);\r\n\r\n  if (\r\n    !!chatData &&\r\n    chatData.hasLeft !== user._id &&\r\n    chatData.hasLeft !== '' &&\r\n    user.currentChatId\r\n  ) {\r\n    return (\r\n      <div className=\"walkthrough-page chat\">\r\n        <TopBar\r\n          label={\r\n            !!conversationPartner &&\r\n            user &&\r\n            user.currentChatId &&\r\n            conversationPartner.firstName + ' ' + conversationPartner.lastName\r\n          }\r\n          hasRightIcon={!!user && !!user.currentChatId ? true : false}\r\n          hasEditIcon={false}\r\n          linkTo={'/lets-meet'}\r\n        />\r\n        <p className=\"paragraph\">\r\n          CealaltÄƒ persoanÄƒ a pÄƒrÄƒsit conversaÈ›ia. ðŸ˜” Pentru a gÄƒsi o altÄƒ\r\n          persoanÄƒ cu care sÄƒ discuÈ›i e nevoie sÄƒ pÄƒrÄƒseÈ™ti conversaÈ›ia.\r\n        </p>\r\n        <Button\r\n          block\r\n          disabled={false}\r\n          size=\"large\"\r\n          className=\"button_primary button_red margin-top\"\r\n          onClick={() => history.push('/lets-meet')}\r\n        >\r\n          PÄƒrÄƒseÈ™te conversaÈ›ia\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container chat\">\r\n      <TopBar\r\n        label={\r\n          !!conversationPartner &&\r\n          user &&\r\n          user.currentChatId &&\r\n          conversationPartner.firstName !== undefined &&\r\n          conversationPartner.firstName + ' ' + conversationPartner.lastName\r\n        }\r\n        hasRightIcon={!!user && !!user.currentChatId ? true : false}\r\n        hasEditIcon={false}\r\n        linkTo={'/lets-meet'}\r\n      />\r\n      {!!user && !user.currentChatId && (\r\n        <div className=\"messages walkthrough-page__content\">\r\n          <h1 className=\"heading\">Nu ai nici o conversaÈ›ie Ã®n desfÄƒÈ™urare.</h1>\r\n          <button\r\n            className=\"button_primary\"\r\n            onClick={() => history.push('/match')}\r\n          >\r\n            CautÄƒ un partener de discuÈ›ie\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        ref={messagesContainer}\r\n        className=\"messages walkthrough-page__content\"\r\n      >\r\n        {!!messages.length &&\r\n          conversationPartner &&\r\n          user &&\r\n          user.currentChatId &&\r\n          messages\r\n            .sort((a, b) => a.createdAt - b.createdAt)\r\n            .map((message) => (\r\n              <div\r\n                className={`message ${\r\n                  message.senderId === user._id ? 'message_reverse' : ''\r\n                }`}\r\n                key={message.id}\r\n              >\r\n                {message.type === 'message' && (\r\n                  <img\r\n                    src={\r\n                      message.senderId === user._id\r\n                        ? user.avatar\r\n                        : conversationPartner.avatar\r\n                    }\r\n                    className=\"message__image image\"\r\n                  />\r\n                )}\r\n                {(message.type === 'computer' ||\r\n                  message.type === 'initialization') && (\r\n                  <p className=\"center\">{message.text}</p>\r\n                )}\r\n\r\n                {message.type === 'message' && (\r\n                  <span\r\n                    className={`message__text ${\r\n                      message.senderId !== user._id ? 'message__text_blank' : ''\r\n                    }`}\r\n                  >\r\n                    {message.text}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))}\r\n      </div>\r\n\r\n      {!!user && !!user.currentChatId && (\r\n        <div className=\"search-box\">\r\n          <Input\r\n            size=\"large\"\r\n            onChange={handleCurrentMessage}\r\n            value={message}\r\n            onPressEnter={handleSend}\r\n            addonAfter={\r\n              <Button\r\n                onClick={handleSend}\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                icon={<SendOutlined />}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Chat);\r\n","D:\\Proiecte\\welou website\\client\\src\\containers\\Meet\\index.js",["159"],"import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport TopBar from '../../components/TopBar';\r\nimport { Modal } from 'antd';\r\nimport api from '../../utils/api';\r\nimport { loadUserData } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst Meet = (props) => {\r\n  const {\r\n    chatData,\r\n    conversationPartner,\r\n    history,\r\n    setConversationPartner,\r\n    setMessages,\r\n    setUserData,\r\n    user,\r\n  } = props;\r\n  const [wannaMeet, setMeetDesire] = useState(false);\r\n  const [isModalVisible, setModalVisibility] = useState(false);\r\n\r\n  const toggleSwitch = async (status) => {\r\n    await api.post('/chat/chatroom', {\r\n      chatId: user.currentChatId,\r\n      userId: user._id,\r\n      status: !wannaMeet,\r\n    });\r\n\r\n    setMeetDesire(!wannaMeet);\r\n  };\r\n\r\n  const handleLeave = async () => {\r\n    await api.post('/chat/message', {\r\n      text: `${user.firstName} ${user.lastName} a pÄƒrÄƒsit conversaÈ›ia.`,\r\n      senderId: user._id,\r\n      receiverId: conversationPartner._id,\r\n      documentId: user.currentChatId,\r\n      type: 'computer',\r\n    });\r\n    await api.post('/chat/chatroom/leave', {\r\n      chatId: user.currentChatId,\r\n      userId: user._id,\r\n      partnerId: conversationPartner._id,\r\n    });\r\n    await api.post('/user/update', {\r\n      _id: user._id,\r\n      currentChatId: '',\r\n    });\r\n\r\n    setMessages([]);\r\n    setConversationPartner({});\r\n    setUserData({ ...user, currentChatId: '' });\r\n    setModalVisibility(false);\r\n    history.push('/match');\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserData(props);\r\n\r\n    const getChatData = async () => {\r\n      const { data } = await api.get('/chat/chatroom', {\r\n        params: { chatId: user.currentChatId },\r\n      });\r\n\r\n      setMeetDesire(data.matches[user._id]);\r\n    };\r\n\r\n    getChatData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container meet\">\r\n      <TopBar label=\"Chat\" hasRightIcon={false} goToChat={true} />\r\n      <div className=\"walkthrough-page__content meet-content\">\r\n        {!!chatData && !chatData.hasLeft && (\r\n          <>\r\n            <p className=\"paragraph\">\r\n              Ai vrea sÄƒ ieÈ™iÈ›i cÃ¢ndva Ã®mpreunÄƒ, dar nu È™tii cum sÄƒ Ã®i spui?\r\n              Èši-ar plÄƒcea sÄƒ È™tii dacÄƒ dorinÈ›a e reciprocÄƒ?\r\n            </p>\r\n            <p>\r\n              * DacÄƒ apeÈ™i butonul de mai jos Ã®È›i vom salva dorinÈ›a, Ã®nsÄƒ\r\n              cealaltÄƒ persoanÄƒ din aceastÄƒ conversaÈ›ie nu va È™ti.\r\n            </p>\r\n            <p>\r\n              * DacÄƒ È™i cel/cea cu care vorbeÈ™ti apasÄƒ pe buton veÈ›i primi\r\n              amÃ¢ndoi o notificare.\r\n            </p>\r\n            <button\r\n              className={`switch ${wannaMeet ? 'switch_on' : ''}`}\r\n              onClick={toggleSwitch}\r\n            >\r\n              <span className=\"circle\" />\r\n            </button>\r\n          </>\r\n        )}\r\n        <div className=\"meet_leave-conversation\">\r\n          <p className=\"paragraph\">Vrei sÄƒ pÄƒrÄƒseÈ™ti conversaÈ›ia?</p>\r\n          <p>\r\n            * DacÄƒ apeÈ™i butonul de mai jos conversaÈ›ia va fi È™tearsÄƒ È™i nu te\r\n            vei putea reÃ®ntoarce la ea.{' '}\r\n            {!!conversationPartner && !!chatData && !chatData.hasLeft\r\n              ? `${conversationPartner.firstName} ${\r\n                  conversationPartner.lastName\r\n                } va fi ${\r\n                  conversationPartner.gender === 'm' ? 'informat' : 'informatÄƒ'\r\n                }\r\n               cÄƒ ai pÄƒrÄƒsit conversaÈ›ia È™i nu Ã®È›i va mai putea trimite mesaje.`\r\n              : ''}\r\n          </p>\r\n          <Button\r\n            block\r\n            disabled={false}\r\n            size=\"large\"\r\n            className=\"button_primary button_red\"\r\n            onClick={() => setModalVisibility(true)}\r\n          >\r\n            PÄƒrÄƒseÈ™te conversaÈ›ia\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        onOk={() => handleLeave()}\r\n        okText=\"Da\"\r\n        cancelText=\"Nu\"\r\n        onCancel={() => setModalVisibility(false)}\r\n      >\r\n        <p className=\"paragraph\">\r\n          EÈ™ti {user.gender === 'm' ? 'sigur' : 'sigurÄƒ'} cÄƒ vrei sÄƒ pÄƒrÄƒseÈ™ti\r\n          conversaÈ›ia?\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Meet);\r\n",["160","161"],"D:\\Proiecte\\welou website\\client\\src\\containers\\EditProfile\\index.js",["162"],"import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Modal, Button } from 'antd';\r\nimport TopBar from '../../components/TopBar';\r\n\r\nimport api from '../../utils/api';\r\nimport { handleUserDelete } from '../../api/firebase';\r\nimport { loadUserData } from '../../utils/hooks';\r\n\r\nimport './style.scss';\r\n\r\nconst EditProfile = (props) => {\r\n  const { user, history } = props;\r\n  const [isModalVisible, setModalVisibility] = useState(false);\r\n\r\n  const onOk = async () => {\r\n    await handleUserDelete();\r\n    await api.post('/user/delete', {\r\n      id: user.facebookId,\r\n    });\r\n    sessionStorage.clear();\r\n    history.push('/');\r\n\r\n    setModalVisibility(false);\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    sessionStorage.clear();\r\n    history.push('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserData(props);\r\n  }, []);\r\n\r\n  return user.firstName ? (\r\n    <div className=\"profile page-container\">\r\n      <TopBar\r\n        label={`${user.firstName} ${user.lastName}`}\r\n        hasRightIcon={false}\r\n      />\r\n      <div className=\"container\">\r\n        <p className=\"paragraph\">DoreÈ™ti ca profilul tÄƒu sÄƒ fie È™ters?</p>\r\n        <Button\r\n          block\r\n          disabled={false}\r\n          size=\"large\"\r\n          className=\"button_primary button_red\"\r\n          onClick={() => setModalVisibility(true)}\r\n        >\r\n          È˜terge contul\r\n        </Button>\r\n        <p className=\"paragraph\">Vrei sÄƒ te deconectezi?</p>\r\n        <Button\r\n          block\r\n          disabled={false}\r\n          size=\"large\"\r\n          className=\"button_primary \"\r\n          onClick={handleDisconnect}\r\n        >\r\n          DeconecteazÄƒ-mÄƒ\r\n        </Button>\r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        onOk={onOk}\r\n        okText=\"Da\"\r\n        cancelText=\"Nu\"\r\n        onCancel={() => setModalVisibility(false)}\r\n      >\r\n        <p className=\"paragraph\">\r\n          EÈ™ti {user.gender === 'm' ? 'sigur' : 'sigurÄƒ'} cÄƒ vrei sÄƒ Ã®È›i fie\r\n          È™ters contul? Toate informaÈ›iile despre tine for fi distruse.\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditProfile);\r\n",["163","164"],"D:\\Proiecte\\welou website\\client\\src\\containers\\Match\\index.js",["165","166","167","168","169","170","171"],"import React, { useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Badge, Button } from 'antd';\r\n\r\nimport api from '../../utils/api';\r\nimport { loadUserData } from '../../utils/hooks';\r\nimport { getMessagingToken } from '../../api/firebase';\r\n\r\nimport ProfileCard from '../../components/ProfileCard';\r\nimport MenuBar from '../../components/MenuBar';\r\n\r\nimport WordMarkIcon from '../../icons/wordmark.svg';\r\nimport LogoIcon from '../../icons/icon.svg';\r\nimport AddUserIcon from '../../icons/add-user.svg';\r\nimport RefreshIcon from '../../icons/refresh.svg';\r\nimport ChatIcon from '../../icons/direct.svg';\r\n\r\nimport './style.scss';\r\n\r\nconst Match = (props) => {\r\n  const {\r\n    history,\r\n    messages,\r\n    notifications,\r\n    setMatchData,\r\n    user,\r\n    userMatch,\r\n  } = props;\r\n  const getMatch = async (user) => {\r\n    try {\r\n      const {\r\n        data: [match],\r\n      } = await api.get('/user/random', {\r\n        params: {\r\n          id: user._id,\r\n        },\r\n      });\r\n      setMatchData(match || null);\r\n    } catch (error) {\r\n      setMatchData({});\r\n    }\r\n  };\r\n\r\n  const rejectUser = async () => {\r\n    await api.post('/user/reject', {\r\n      userId: user._id,\r\n      rejectedUserId: userMatch._id,\r\n    });\r\n\r\n    getMatch(user);\r\n  };\r\n\r\n  const sendRequest = async () => {\r\n    try {\r\n      await api.post('/user/request', {\r\n        senderId: user._id,\r\n        receiverId: userMatch._id,\r\n      });\r\n\r\n      getMatch(user);\r\n\r\n      await api.post('/notification', {\r\n        token: userMatch.fcmToken,\r\n        title: 'Notificare nouÄƒ',\r\n        message: 'Cineva vrea sÄƒ vorbiÈ›i',\r\n        icon: user.avatar,\r\n        type: 'request',\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user.currentChatId && user._id) {\r\n      getMatch(user);\r\n    }\r\n  }, [user.currentChatId]);\r\n\r\n  useEffect(() => {\r\n    const handleMount = async () => {\r\n      const token = await getMessagingToken();\r\n      loadUserData({ ...props, getMatch, token });\r\n    };\r\n    handleMount();\r\n  }, []);\r\n\r\n  const count =\r\n    messages.length &&\r\n    messages.sort((a, b) => a.createdAt - b.createdAt)[messages.length - 1]\r\n      .senderId !== user._id\r\n      ? '!'\r\n      : null;\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container match\">\r\n      <div className=\"header\">\r\n        <img src={WordMarkIcon} className=\"header__logo_wordmark\" />\r\n        <Link to=\"/chat\">\r\n          <Badge count={count}>\r\n            <img src={LogoIcon} className=\"header__logo_icon\" />\r\n          </Badge>\r\n        </Link>\r\n      </div>\r\n      <div className=\"walkthrough-page__content match__profile-card\">\r\n        {user.currentChatId && (\r\n          <>\r\n            <p className=\"paragraph\">\r\n              Ai deja o conversaÈ›ie Ã®n deÈ™fÄƒÈ™urare. Nu poÈ›i cÄƒuta alte persoane\r\n              Ã®n timp ce vorbeÈ™ti cu cineva.\r\n            </p>\r\n            <Button\r\n              block\r\n              disabled={false}\r\n              size=\"large\"\r\n              className=\"button_primary\"\r\n              onClick={() => history.push('/chat')}\r\n              icon={<img className=\"button__icon\" src={ChatIcon} />}\r\n            >\r\n              Mergi la chat\r\n            </Button>\r\n          </>\r\n        )}\r\n        {!userMatch && !user.currentChatId && (\r\n          <p className=\"paragraph\">\r\n            Nu am putut gÄƒsi nici o persoanÄƒ potrivitÄƒ pentru tine. Te rugÄƒm sÄƒ\r\n            revii mai tÃ¢rziu sau Ã®ncearcÄƒ sÄƒ dai un refresh.\r\n          </p>\r\n        )}\r\n      </div>\r\n      {userMatch && !user.currentChatId && (\r\n        <>\r\n          <div className=\"walkthrough-page__content match__profile-card\">\r\n            <ProfileCard collapsed user={userMatch} />\r\n          </div>\r\n          <div className=\"match__buttons\">\r\n            <Button\r\n              block\r\n              disabled={false}\r\n              size=\"large\"\r\n              className=\"button_primary button_red\"\r\n              onClick={rejectUser}\r\n              icon={<img className=\"button__icon\" src={RefreshIcon} />}\r\n            >\r\n              RefuzÄƒ\r\n            </Button>\r\n            <Button\r\n              block\r\n              disabled={false}\r\n              size=\"large\"\r\n              className=\"button_primary \"\r\n              onClick={sendRequest}\r\n              icon={<img className=\"button__icon\" src={AddUserIcon} />}\r\n            >\r\n              DiscutÄƒ\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n      <MenuBar hasNotifications={!!notifications && !!notifications.length} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Match);\r\n",["172","173"],"D:\\Proiecte\\welou website\\client\\src\\App.js",["174","175"],"import { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { notification as notificationComponent } from 'antd';\n\nimport { database, onMessageListener } from './api/firebase';\nimport { loadUserData } from './utils/hooks';\n\nimport routes from './routes';\n\nimport './App.scss';\n\nconst App = ({ history }) => {\n  const [chatData, setChatData] = useState({});\n  const [conversationPartner, setConversationPartner] = useState({});\n  const [userMatch, setMatchData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [notifications, setNotifications] = useState([]);\n  const [user, setUserData] = useState({});\n  const props = {\n    chatData,\n    conversationPartner,\n    userMatch,\n    messages,\n    notifications,\n    setChatData,\n    setConversationPartner,\n    setMatchData,\n    setMessages,\n    setNotifications,\n    setUserData,\n    user,\n    history,\n  };\n  const handleNotifications = () => {\n    onMessageListener(({ data: { type }, notification }) => {\n      const { pathname } = window.location;\n      const onNotificationClick = (type) => {\n        console.log(type);\n        if (type === 'message') {\n          history.push(!messages.length ? '/match' : '/chat');\n        } else {\n          history.push('/notifications');\n        }\n      };\n\n      if (type === 'message' && pathname === '/chat') return;\n      if (type === 'request' && pathname === '/notifications') return;\n\n      notificationComponent.open({\n        message: notification.title,\n        description: notification.body,\n        duration: 2,\n        onClick: onNotificationClick,\n      });\n    });\n  };\n\n  const handleMessagesListening = () => {\n    if (user && user.currentChatId) {\n      database\n        .collection('chats')\n        .doc(user.currentChatId)\n        .collection('messages')\n        .onSnapshot((snapshot) => {\n          const messagesList = [];\n          snapshot.forEach((doc) => messagesList.push(doc.data()));\n          setMessages(messagesList);\n        });\n    }\n  };\n\n  useEffect(() => {\n    handleMessagesListening();\n  }, [user.currentChatId]);\n\n  useEffect(() => {\n    loadUserData(props);\n    handleNotifications();\n    handleMessagesListening();\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__containers\">\n        <Switch>\n          {routes.map(({ route, component }) => {\n            return (\n              <Route path={route} exact={true} key={route}>\n                {component(props)}\n              </Route>\n            );\n          })}\n          <Redirect from=\"*\" to=\"/match\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n","D:\\Proiecte\\welou website\\client\\src\\containers\\Notifications\\index.js",["176","177"],"import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { Modal } from 'antd';\r\nimport TopBar from '../../components/TopBar';\r\nimport Notification from '../../components/Notification';\r\n\r\nimport { loadUserData } from '../../utils/hooks';\r\nimport api from '../../utils/api';\r\n\r\nimport './style.scss';\r\n\r\nconst Notifications = (props) => {\r\n  const {\r\n    user,\r\n    setUserData,\r\n    history,\r\n    notifications,\r\n    setNotifications,\r\n    setMessages,\r\n    conversationPartner,\r\n  } = props;\r\n  const [isModalVisible, setModalVisibility] = useState(false);\r\n  const [partner, setPartner] = useState({});\r\n\r\n  const handleAcceptRequest = async (fromId) => {\r\n    if (user.currentChatId) {\r\n      const { data: partner } = await api.get('/user', {\r\n        params: {\r\n          id: fromId,\r\n        },\r\n      });\r\n\r\n      setModalVisibility(true);\r\n      setPartner(partner);\r\n    } else {\r\n      await acceptRequest(fromId);\r\n    }\r\n  };\r\n\r\n  const acceptRequest = async (fromId) => {\r\n    try {\r\n      setMessages([]);\r\n\r\n      const { data: chatId } = await api.post('/chat', {\r\n        receiverId: user._id,\r\n        senderId: fromId,\r\n      });\r\n      await api.post('/user/notification/accept', {\r\n        id: user._id,\r\n        from_id: fromId,\r\n        chatId,\r\n      });\r\n\r\n      const { data: partner } = await api.get('/user', {\r\n        params: {\r\n          id: fromId,\r\n        },\r\n      });\r\n\r\n      history.push('/chat');\r\n\r\n      await api.post('/notification', {\r\n        token: partner.fcmToken,\r\n        title: 'Notificare nouÄƒ',\r\n        message: `${user.firstName} ${user.lastName} È›i-a acceptat cererea.`,\r\n        icon: user.avatar,\r\n        type: 'request',\r\n      });\r\n    } catch (error) {}\r\n  };\r\n\r\n  const declineRequest = async (fromId) => {\r\n    await api.post('/user/notification/decline', {\r\n      id: user._id,\r\n      from_id: fromId,\r\n    });\r\n\r\n    const { data } = await api.get('/user/notifications', {\r\n      params: {\r\n        id: user._id,\r\n      },\r\n    });\r\n\r\n    setNotifications(!!data ? data : []);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserData(props);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"notifications walkthrough-page page-container match\">\r\n      <TopBar label=\"NotificÄƒri\" hasRightIcon={false} />\r\n      <div className=\"notifications__content\">\r\n        {!!notifications &&\r\n          !!notifications.length &&\r\n          notifications.map((notification) => (\r\n            <Notification\r\n              image={notification.avatar}\r\n              name={`${notification.firstName} ${notification.lastName}`}\r\n              id={notification._id}\r\n              key={notification.avatar}\r\n              acceptRequest={() => handleAcceptRequest(notification._id)}\r\n              declineRequest={() => declineRequest(notification._id)}\r\n            />\r\n          ))}\r\n        {!!!notifications.length && (\r\n          <p className=\"paragraph\">Nu ai nici o notificare.</p>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible && !!partner}\r\n        onOk={() => acceptRequest(partner._id)}\r\n        okText=\"Sunt de acord\"\r\n        cancelText=\"Refuz\"\r\n        onCancel={() => setModalVisibility(false)}\r\n      >\r\n        <p className=\"paragraph\">\r\n          DacÄƒ accepÈ›i aceastÄƒ cerere discuÈ›ia pe care o ai acum va fi È™tearsÄƒ\r\n          È™i nu vei mai putea vorbi cu{' '}\r\n          {conversationPartner && conversationPartner.firstName}{' '}\r\n          {conversationPartner && conversationPartner.lastName}.\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Notifications);\r\n",["178","179"],"D:\\Proiecte\\welou website\\client\\src\\containers\\Profile\\index.js",["180"],"import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport TopBar from '../../components/TopBar';\r\nimport ProfileCard from '../../components/ProfileCard';\r\n\r\nimport api from '../../utils/api';\r\nimport { loadUserData } from '../../utils/hooks';\r\n\r\nimport './style.scss';\r\n\r\nconst Profile = (props) => {\r\n  const { user } = props;\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [isDifferentProfile, setIsDifferentProfile] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getUser = async (id) => {\r\n      const { data } = await api.get('/user', {\r\n        params: {\r\n          id,\r\n        },\r\n      });\r\n      setUserProfile(data);\r\n    };\r\n\r\n    if (window.location.href.includes('id=')) {\r\n      setIsDifferentProfile(true);\r\n      getUser(window.location.href.split('id=')[1]);\r\n    } else {\r\n      loadUserData(props);\r\n    }\r\n  }, []);\r\n  const profile = userProfile ? userProfile : user;\r\n\r\n  return profile.firstName ? (\r\n    <div className=\"profile page-container\">\r\n      <TopBar\r\n        label={`${profile.firstName} ${profile.lastName}`}\r\n        hasRightIcon={!isDifferentProfile}\r\n        goToNotifications={isDifferentProfile}\r\n      />\r\n      <ProfileCard user={profile} />\r\n    </div>\r\n  ) : (\r\n    <></>\r\n  );\r\n};\r\n\r\nexport default withRouter(Profile);\r\n",["181","182"],"D:\\Proiecte\\welou website\\client\\src\\utils\\hooks.js",[],["183","184"],"D:\\Proiecte\\welou website\\client\\src\\utils\\api.js",[],["185","186"],"D:\\Proiecte\\welou website\\client\\src\\reportWebVitals.js",[],["187","188"],"D:\\Proiecte\\welou website\\client\\src\\containers\\Description\\index.js",["189"],"import React, { useState } from 'react';\r\nimport { Button, Input, AutoComplete, Select } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { handleAutocompleteFilter } from '../../utils';\r\nimport { useAutocompleteSelect } from '../../utils/hooks';\r\nimport LogoIcon from '../../icons/logo.svg';\r\nimport counties from '../../constants/counties';\r\nimport './style.scss';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Description = ({ history, user, setUserData }) => {\r\n  const [searchValue, setSearchValue, handleOnSelect] = useAutocompleteSelect();\r\n\r\n  // const [firstName, setFirstName] = useState('');\r\n  // const [lastName, setLastName] = useState('');\r\n  const [age, setAge] = useState('');\r\n  const [gender, setGender] = useState('');\r\n\r\n  const handleOnClick = () => {\r\n    setUserData({\r\n      ...user,\r\n      age: Number(age),\r\n      county: searchValue,\r\n      gender,\r\n    });\r\n    history.push('/walkthrough/books');\r\n  };\r\n\r\n  const handleGender = (value) => {\r\n    setGender(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container description\">\r\n      <img className=\"description__logo\" src={LogoIcon} />\r\n      <div className=\"content-container\">\r\n        <p className=\"paragraph\">\r\n          ÃŽnainte de a Ã®ncepe e nevoie sÄƒ rÄƒspunzi la cÃ¢teva Ã®ntrebÄƒri, ca\r\n          celelalte persoane sÄƒ-È™i facÄƒ o idee cÃ¢t mai bunÄƒ despre tine.\r\n        </p>\r\n        <Input\r\n          placeholder=\"Care e prenumele tÄƒu?\"\r\n          size=\"large\"\r\n          className=\"input\"\r\n          autoComplete=\"off\"\r\n          value={user.firstName}\r\n          disabled={true}\r\n          // onChange={({ target: { value } }) => setFirstName(value)}\r\n        />\r\n        <Input\r\n          placeholder=\"Care e numele tÄƒu?\"\r\n          size=\"large\"\r\n          disabled={true}\r\n          className=\"input\"\r\n          autoComplete=\"off\"\r\n          value={user.lastName}\r\n          // onChange={({ target: { value } }) => setLastName(value)}\r\n        />\r\n        <AutoComplete\r\n          options={counties}\r\n          placeholder=\"ÃŽn ce judeÈ› locuieÈ™ti?\"\r\n          filterOption={handleAutocompleteFilter}\r\n          onSelect={handleOnSelect}\r\n          size=\"large\"\r\n          value={searchValue}\r\n          className=\"input\"\r\n          onChange={setSearchValue}\r\n        />\r\n        <Input\r\n          size=\"large\"\r\n          placeholder=\"CÃ¢È›i ani ai?\"\r\n          className=\"  input\"\r\n          value={age}\r\n          onChange={({ target: { value } }) => setAge(value)}\r\n        />\r\n        <Select\r\n          placeholder=\"Sex\"\r\n          onChange={handleGender}\r\n          className=\"select_gender\"\r\n        >\r\n          <Option value=\"m\">Masculin</Option>\r\n          <Option value=\"f\">Feminin</Option>\r\n        </Select>\r\n      </div>\r\n      <Button\r\n        className=\"button_primary\"\r\n        block\r\n        disabled={!user.firstName || !user.lastName || !age || !gender}\r\n        size=\"large\"\r\n        onClick={handleOnClick}\r\n      >\r\n        ContinuÄƒ\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Description);\r\n",["190","191"],"D:\\Proiecte\\welou website\\client\\src\\containers\\Connect\\index.js",["192","193","194"],"D:\\Proiecte\\welou website\\client\\src\\components\\InterestsList\\index.jsx",["195","196"],"import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './styles.scss';\r\n\r\nconst InterestsList = ({ heading, icon, interests, color, collapsed }) => {\r\n  if (!interests.length) return null;\r\n  return (\r\n    <div className=\"interest\">\r\n      {!collapsed && (\r\n        <div className=\"interest__header\">\r\n          <img src={icon} className=\"interest__icon\" />\r\n          <span className=\"interest__heading\">{heading}:</span>\r\n        </div>\r\n      )}\r\n      <div className=\"interest__options\">\r\n        {collapsed && (\r\n          <img src={icon} className=\"interest__icon interest__icon_small\" />\r\n        )}\r\n        {!!interests.length &&\r\n          interests.map((value) => (\r\n            <button\r\n              className={classNames('pill', {\r\n                [`pill_${color}`]: color,\r\n                pill_small: collapsed,\r\n              })}\r\n              key={value}\r\n              disabled\r\n            >\r\n              {value}\r\n            </button>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestsList;\r\n","D:\\Proiecte\\welou website\\client\\src\\containers\\HobbiesPreferences\\index.js",[],["197","198"],"D:\\Proiecte\\welou website\\client\\src\\containers\\MusicPreferences\\index.js",["199"],"import React from 'react';\r\nimport { Button, AutoComplete } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { listOfMusicGenres } from '../../constants/suggestions';\r\nimport { handleAutocompleteFilter } from '../../utils';\r\nimport { useAutocompleteMethods } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst MusicPreferences = ({ history, user, setUserData }) => {\r\n  const [\r\n    options,\r\n    searchValue,\r\n    setSearchValue,\r\n    handleKeyPress,\r\n    handleOnRemove,\r\n    handleOnSelect,\r\n  ] = useAutocompleteMethods();\r\n\r\n  const handleOnClick = () => {\r\n    setUserData({\r\n      ...user,\r\n      music: options,\r\n    });\r\n    history.push('/walkthrough/series');\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container\">\r\n      <WalkthroughHeader path=\"series\" percent={50} />\r\n      <div className=\"walkthrough-page__content\">\r\n        <h1 className=\"heading\">Ce genuri muzicale Ã®È›i plac?</h1>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * PoÈ›i introduce mai multe rÄƒspunsuri.\r\n        </p>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * Sugestiile sunt Ã®n englezÄƒ, dar poÈ›i introduce orice denumire.\r\n        </p>\r\n        <AutoComplete\r\n          options={listOfMusicGenres}\r\n          value={searchValue}\r\n          onChange={setSearchValue}\r\n          placeholder=\"CautÄƒ un gen\"\r\n          filterOption={handleAutocompleteFilter}\r\n          size=\"large\"\r\n          className=\"autocomplete\"\r\n          size=\"large\"\r\n          onSelect={handleOnSelect}\r\n          onKeyDown={handleKeyPress}\r\n        />\r\n        {!!options &&\r\n          options.map((value) => (\r\n            <button\r\n              className=\"pill pill_closable\"\r\n              value={value}\r\n              key={value}\r\n              onClick={handleOnRemove}\r\n            >\r\n              {value}\r\n              <CloseOutlined />\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Link to=\"/walkthrough/sports\" className=\"link\">\r\n          ÃŽnapoi\r\n        </Link>\r\n        <Button\r\n          className=\"btn_primary\"\r\n          disabled={false}\r\n          onClick={handleOnClick}\r\n        >\r\n          ContinuÄƒ\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MusicPreferences);\r\n",["200","201"],"D:\\Proiecte\\welou website\\client\\src\\constants\\counties.js",["202"],"D:\\Proiecte\\welou website\\client\\src\\index.js",[],["203","204"],"D:\\Proiecte\\welou website\\client\\src\\containers\\SeriesPreferences\\index.js",["205"],"import React from 'react';\r\nimport { Button, AutoComplete } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { listOfTVSeries } from '../../constants/suggestions';\r\nimport { handleAutocompleteFilter } from '../../utils';\r\nimport { useAutocompleteMethods } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst SeriesPreferences = ({ history, user, setUserData }) => {\r\n  const [\r\n    options,\r\n    searchValue,\r\n    setSearchValue,\r\n    handleKeyPress,\r\n    handleOnRemove,\r\n    handleOnSelect,\r\n  ] = useAutocompleteMethods();\r\n\r\n  const handleOnClick = () => {\r\n    setUserData({\r\n      ...user,\r\n      series: options,\r\n    });\r\n    history.push('/walkthrough/hobbies');\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container\">\r\n      <WalkthroughHeader path=\"hobbies\" percent={60} />\r\n      <div className=\"walkthrough-page__content\">\r\n        <h1 className=\"heading\">Ce seriale ai urmÄƒrit?</h1>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * PoÈ›i introduce mai multe rÄƒspunsuri.\r\n        </p>\r\n        <AutoComplete\r\n          options={listOfTVSeries}\r\n          value={searchValue}\r\n          onChange={setSearchValue}\r\n          placeholder=\"CautÄƒ un serial\"\r\n          size=\"large\"\r\n          className=\"autocomplete\"\r\n          size=\"large\"\r\n          onSelect={handleOnSelect}\r\n          onKeyDown={handleKeyPress}\r\n          filterOption={handleAutocompleteFilter}\r\n        />\r\n        {!!options &&\r\n          options.map((value) => (\r\n            <button\r\n              className=\"pill pill_closable\"\r\n              value={value}\r\n              key={value}\r\n              onClick={handleOnRemove}\r\n            >\r\n              {value}\r\n              <CloseOutlined />\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Link to=\"/walkthrough/music\" className=\"link\">\r\n          ÃŽnapoi\r\n        </Link>\r\n        <Button\r\n          className=\"btn_primary\"\r\n          disabled={false}\r\n          onClick={handleOnClick}\r\n        >\r\n          ContinuÄƒ\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SeriesPreferences);\r\n",["206","207"],"D:\\Proiecte\\welou website\\client\\src\\containers\\BioPreferences\\index.js",["208","209"],"import React, { useState } from 'react';\r\nimport { Button, Input, Checkbox } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport api from '../../utils/api';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { getMessagingToken } from '../../api/firebase';\r\nimport './style.scss';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BioPreferences = ({ history, user, setUserData }) => {\r\n  const [description, setDescription] = useState('');\r\n  const [hasNotificationsConsent, setNotificationConsent] = useState(false);\r\n  const [hasDataConsent, setDataConsent] = useState(false);\r\n  const [hasError, setError] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleOnClick = async () => {\r\n    try {\r\n      const { data } = await api.post('/user', {\r\n        ...user,\r\n        description,\r\n        walkthrough: 'completed',\r\n        facebookId: sessionStorage.getItem('facebookId'),\r\n      });\r\n      setUserData(data);\r\n      history.push('/match');\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleNotificationConsent = async () => {\r\n    if (!hasNotificationsConsent) {\r\n      const token = await getMessagingToken();\r\n\r\n      if (!token) {\r\n        setNotificationConsent(false);\r\n        setError(true);\r\n      } else {\r\n        setNotificationConsent(true);\r\n        setUserData({ ...user, fcmToken: token });\r\n        setError(false);\r\n      }\r\n    } else {\r\n      setNotificationConsent(false);\r\n      setUserData({ ...user, fcmToken: '' });\r\n    }\r\n  };\r\n\r\n  const handleDataConsent = () => {\r\n    setDataConsent(!hasDataConsent);\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container bio\">\r\n      <WalkthroughHeader path=\"interests\" percent={95} label=\"ÃŽnapoi\" />\r\n      <div className=\"walkthrough-page__content bio\">\r\n        <h1 className=\"heading\">Ultimele detalii</h1>\r\n        <div className=\"description-box\">\r\n          <img className=\"image image_small-centered\" src={user.avatar} />\r\n          <p className=\"paragraph_medium\">\r\n            Vom folosi ca fotografie de profil poza pe care o ai acum pe\r\n            Facebook.\r\n          </p>\r\n        </div>\r\n        <p className=\"paragraph bio_paragraph\">\r\n          Cum te-ai descrie, Ã®n cÃ¢teva cuvinte?\r\n        </p>\r\n        <TextArea\r\n          className=\"textarea\"\r\n          rows={4}\r\n          showCount\r\n          maxLength={100}\r\n          placeholder=\"Scrie ceva despre tine\"\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n        <Checkbox\r\n          checked={hasNotificationsConsent}\r\n          onChange={handleNotificationConsent}\r\n        >\r\n          Vreau sÄƒ primesc notificÄƒri atunci cÃ¢nd primesc cerere sau mesaj de la\r\n          cineva.\r\n        </Checkbox>\r\n        <Checkbox checked={hasDataConsent} onChange={handleDataConsent}>\r\n          Sunt de acord ca datele personale sÄƒ-mi fie prelucrate conform{' '}\r\n          <a\r\n            href=\"https://www.iubenda.com/privacy-policy/57889819/legal\"\r\n            target=\"_blank\"\r\n          >\r\n            politicii de confidenÈ›ialitate.\r\n          </a>\r\n        </Checkbox>\r\n        {hasError && (\r\n          <>\r\n            <p className=\"paragraph error\">\r\n              Ai blocat opÈ›iunea pentru afiÈ™area notificÄƒrilor. Te rugÄƒm sÄƒ\r\n              permiÈ›i notificÄƒrile È™i sÄƒ bifezi aceastÄƒ cÄƒsuÈ›Äƒ.\r\n            </p>\r\n            <p className=\"paragraph error\">\r\n              Important! Nu da refresh dupÄƒ ce ai permis afiÈ™area notificÄƒrilor.\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Button\r\n          className=\"button_primary \"\r\n          block\r\n          disabled={!hasDataConsent}\r\n          onClick={handleOnClick}\r\n        >\r\n          FinalizeazÄƒ\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(BioPreferences);\r\n",["210","211"],"D:\\Proiecte\\welou website\\client\\src\\containers\\SportsPreferences\\index.js",["212"],"import React from 'react';\r\nimport { Button, AutoComplete } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { listOfSports } from '../../constants/suggestions';\r\nimport { handleAutocompleteFilter } from '../../utils';\r\nimport { useAutocompleteMethods } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst SportsPreferences = ({ history, user, setUserData }) => {\r\n  const [\r\n    options,\r\n    searchValue,\r\n    setSearchValue,\r\n    handleKeyPress,\r\n    handleOnRemove,\r\n    handleOnSelect,\r\n  ] = useAutocompleteMethods();\r\n\r\n  const handleOnClick = () => {\r\n    setUserData({\r\n      ...user,\r\n      sports: options,\r\n    });\r\n    history.push('/walkthrough/music');\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container\">\r\n      <WalkthroughHeader path=\"music\" percent={40} />\r\n      <div className=\"walkthrough-page__content\">\r\n        <h1 className=\"heading\">Ce sporturi Ã®È›i plac?</h1>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * PoÈ›i introduce mai multe rÄƒspunsuri.\r\n        </p>\r\n        <AutoComplete\r\n          options={listOfSports}\r\n          value={searchValue}\r\n          onChange={setSearchValue}\r\n          placeholder=\"CautÄƒ un sport\"\r\n          filterOption={handleAutocompleteFilter}\r\n          size=\"large\"\r\n          className=\"autocomplete\"\r\n          size=\"large\"\r\n          onSelect={handleOnSelect}\r\n          onKeyDown={handleKeyPress}\r\n        />\r\n        {!!options &&\r\n          options.map((value) => (\r\n            <button\r\n              className=\"pill pill_closable\"\r\n              value={value}\r\n              key={value}\r\n              onClick={handleOnRemove}\r\n            >\r\n              {value}\r\n              <CloseOutlined />\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Link to=\"/walkthrough/books\" className=\"link\">\r\n          ÃŽnapoi\r\n        </Link>\r\n        <Button\r\n          className=\"btn_primary\"\r\n          disabled={false}\r\n          onClick={handleOnClick}\r\n        >\r\n          ContinuÄƒ\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SportsPreferences);\r\n",["213","214"],"D:\\Proiecte\\welou website\\client\\src\\components\\MenuBar\\index.jsx",["215","216","217","218"],"import React from 'react';\r\nimport { Badge } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport ShuffleOrangeIcon from '../../icons/shuffle-orange.svg';\r\nimport BellIcon from '../../icons/bell.svg';\r\nimport UserIcon from '../../icons/user-grey.svg';\r\nimport './styles.scss';\r\n\r\nconst MenuBar = ({ hasNotifications }) => {\r\n  return (\r\n    <div className=\"menu-bar\">\r\n      <Link to=\"match\" className=\"menu-bar__item\">\r\n        <img src={ShuffleOrangeIcon} className=\"menu-bar__icon\" />\r\n      </Link>\r\n      <Link to=\"/notifications\" className=\"menu-bar__item\">\r\n        <img src={BellIcon} className=\"menu-bar__icon\" />\r\n        {hasNotifications && <span className=\"menu-bar__badge\">!</span>}\r\n      </Link>\r\n      <Link to=\"/profile\" className=\"menu-bar__item\">\r\n        <img src={UserIcon} className=\"menu-bar__icon\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","D:\\Proiecte\\welou website\\client\\src\\constants\\suggestions.js",["219"],"D:\\Proiecte\\welou website\\client\\src\\containers\\InterestsPreferences\\index.js",[],["220","221"],"D:\\Proiecte\\welou website\\client\\src\\utils\\strings.js",[],"D:\\Proiecte\\welou website\\client\\src\\components\\WalkthroughHeader\\index.jsx",["222"],"D:\\Proiecte\\welou website\\client\\src\\containers\\BooksPreferences\\index.js",[],["223","224"],"D:\\Proiecte\\welou website\\client\\src\\components\\Notification\\index.jsx",["225","226"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../utils/api';\r\n\r\nimport './styles.scss';\r\n\r\nconst InterestsList = ({ image, name, id, acceptRequest, declineRequest }) => {\r\n  return (\r\n    <div className=\"notification\">\r\n      <Link to={`/profile?id=${id}`} className=\"notification__link\">\r\n        <img src={image} className=\"image\" />\r\n        <p className=\"paragraph\">{name} vrea sÄƒ discutaÈ›i.</p>\r\n      </Link>\r\n      <div className=\"notification__buttons\">\r\n        <button className=\"button_primary\" onClick={acceptRequest}>\r\n          AcceptÄƒ\r\n        </button>\r\n        <button className=\"button_primary button_red\" onClick={declineRequest}>\r\n          RefuzÄƒ\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestsList;\r\n","D:\\Proiecte\\welou website\\client\\src\\utils\\index.js",[],"D:\\Proiecte\\welou website\\client\\src\\api\\firebase.js",[],"D:\\Proiecte\\welou website\\client\\src\\routes.js",["227"],"import Connect from './containers/Connect';\r\nimport Description from './containers/Description';\r\nimport BooksPreferences from './containers/BooksPreferences';\r\nimport SportsPreferences from './containers/SportsPreferences';\r\nimport MusicPreferences from './containers/MusicPreferences';\r\nimport SeriesPreferences from './containers/SeriesPreferences';\r\nimport HobbiesPreferences from './containers/HobbiesPreferences';\r\nimport InterestsPreferences from './containers/InterestsPreferences';\r\nimport BioPreferences from './containers/BioPreferences';\r\nimport Match from './containers/Match';\r\nimport Profile from './containers/Profile';\r\nimport EditProfile from './containers/EditProfile';\r\nimport Notifications from './containers/Notifications';\r\nimport Chat from './containers/Chat';\r\nimport Meet from './containers/Meet';\r\n\r\nexport default [\r\n  { route: '/', component: (props) => <Connect {...props} /> },\r\n  {\r\n    route: '/walkthrough/description',\r\n    component: (props) => <Description {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/books',\r\n    component: (props) => <BooksPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/sports',\r\n    component: (props) => <SportsPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/music',\r\n    component: (props) => <MusicPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/series',\r\n    component: (props) => <SeriesPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/hobbies',\r\n    component: (props) => <HobbiesPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/interests',\r\n    component: (props) => <InterestsPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/bio',\r\n    component: (props) => <BioPreferences {...props} />,\r\n  },\r\n  { route: '/profile', component: (props) => <Profile {...props} /> },\r\n  { route: '/profile/edit', component: (props) => <EditProfile {...props} /> },\r\n  { route: '/match', component: (props) => <Match {...props} /> },\r\n  {\r\n    route: '/notifications',\r\n    component: (props) => <Notifications {...props} />,\r\n  },\r\n  { route: '/chat', component: (props) => <Chat {...props} /> },\r\n  { route: '/lets-meet', component: (props) => <Meet {...props} /> },\r\n];\r\n",{"ruleId":"228","severity":1,"message":"229","line":91,"column":6,"nodeType":"230","endLine":91,"endColumn":24,"suggestions":"231"},{"ruleId":"228","severity":1,"message":"232","line":96,"column":6,"nodeType":"230","endLine":96,"endColumn":16,"suggestions":"233"},{"ruleId":"228","severity":1,"message":"234","line":101,"column":6,"nodeType":"230","endLine":101,"endColumn":8,"suggestions":"235"},{"ruleId":"236","severity":1,"message":"237","line":183,"column":19,"nodeType":"238","endLine":190,"endColumn":21},{"ruleId":"228","severity":1,"message":"239","line":70,"column":6,"nodeType":"230","endLine":70,"endColumn":8,"suggestions":"240"},{"ruleId":"241","replacedBy":"242"},{"ruleId":"243","replacedBy":"244"},{"ruleId":"228","severity":1,"message":"245","line":35,"column":6,"nodeType":"230","endLine":35,"endColumn":8,"suggestions":"246"},{"ruleId":"241","replacedBy":"247"},{"ruleId":"243","replacedBy":"248"},{"ruleId":"228","severity":1,"message":"249","line":78,"column":6,"nodeType":"230","endLine":78,"endColumn":26,"suggestions":"250"},{"ruleId":"228","severity":1,"message":"251","line":86,"column":6,"nodeType":"230","endLine":86,"endColumn":8,"suggestions":"252"},{"ruleId":"236","severity":1,"message":"237","line":98,"column":9,"nodeType":"238","endLine":98,"endColumn":69},{"ruleId":"236","severity":1,"message":"237","line":101,"column":13,"nodeType":"238","endLine":101,"endColumn":65},{"ruleId":"236","severity":1,"message":"237","line":118,"column":21,"nodeType":"238","endLine":118,"endColumn":68},{"ruleId":"236","severity":1,"message":"237","line":143,"column":21,"nodeType":"238","endLine":143,"endColumn":71},{"ruleId":"236","severity":1,"message":"237","line":153,"column":21,"nodeType":"238","endLine":153,"endColumn":71},{"ruleId":"241","replacedBy":"253"},{"ruleId":"243","replacedBy":"254"},{"ruleId":"228","severity":1,"message":"255","line":74,"column":6,"nodeType":"230","endLine":74,"endColumn":26,"suggestions":"256"},{"ruleId":"228","severity":1,"message":"257","line":80,"column":6,"nodeType":"230","endLine":80,"endColumn":8,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":16,"column":5,"nodeType":"261","messageId":"262","endLine":16,"endColumn":16},{"ruleId":"228","severity":1,"message":"245","line":90,"column":6,"nodeType":"230","endLine":90,"endColumn":8,"suggestions":"263"},{"ruleId":"241","replacedBy":"264"},{"ruleId":"243","replacedBy":"265"},{"ruleId":"228","severity":1,"message":"245","line":33,"column":6,"nodeType":"230","endLine":33,"endColumn":8,"suggestions":"266"},{"ruleId":"241","replacedBy":"267"},{"ruleId":"243","replacedBy":"268"},{"ruleId":"241","replacedBy":"269"},{"ruleId":"243","replacedBy":"270"},{"ruleId":"241","replacedBy":"271"},{"ruleId":"243","replacedBy":"272"},{"ruleId":"241","replacedBy":"273"},{"ruleId":"243","replacedBy":"274"},{"ruleId":"236","severity":1,"message":"237","line":36,"column":7,"nodeType":"238","endLine":36,"endColumn":59},{"ruleId":"241","replacedBy":"275"},{"ruleId":"243","replacedBy":"276"},{"ruleId":"228","severity":1,"message":"277","line":78,"column":6,"nodeType":"230","endLine":78,"endColumn":8,"suggestions":"278"},{"ruleId":"236","severity":1,"message":"237","line":87,"column":9,"nodeType":"238","endLine":87,"endColumn":57},{"ruleId":"236","severity":1,"message":"237","line":99,"column":17,"nodeType":"238","endLine":99,"endColumn":68},{"ruleId":"236","severity":1,"message":"237","line":11,"column":11,"nodeType":"238","endLine":11,"endColumn":56},{"ruleId":"236","severity":1,"message":"237","line":17,"column":11,"nodeType":"238","endLine":17,"endColumn":77},{"ruleId":"241","replacedBy":"279"},{"ruleId":"243","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":48,"column":11,"nodeType":"283","endLine":48,"endColumn":23},{"ruleId":"241","replacedBy":"284"},{"ruleId":"243","replacedBy":"285"},{"ruleId":"286","severity":1,"message":"287","line":1,"column":1,"nodeType":"288","endLine":44,"endColumn":3},{"ruleId":"241","replacedBy":"289"},{"ruleId":"243","replacedBy":"290"},{"ruleId":"281","severity":1,"message":"282","line":44,"column":11,"nodeType":"283","endLine":44,"endColumn":23},{"ruleId":"241","replacedBy":"291"},{"ruleId":"243","replacedBy":"292"},{"ruleId":"236","severity":1,"message":"237","line":62,"column":11,"nodeType":"238","endLine":62,"endColumn":75},{"ruleId":"293","severity":1,"message":"294","line":91,"column":13,"nodeType":"283","endLine":91,"endColumn":28},{"ruleId":"241","replacedBy":"295"},{"ruleId":"243","replacedBy":"296"},{"ruleId":"281","severity":1,"message":"282","line":45,"column":11,"nodeType":"283","endLine":45,"endColumn":23},{"ruleId":"241","replacedBy":"297"},{"ruleId":"243","replacedBy":"298"},{"ruleId":"259","severity":1,"message":"299","line":2,"column":10,"nodeType":"261","messageId":"262","endLine":2,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":13,"column":9,"nodeType":"238","endLine":13,"endColumn":67},{"ruleId":"236","severity":1,"message":"237","line":16,"column":9,"nodeType":"238","endLine":16,"endColumn":58},{"ruleId":"236","severity":1,"message":"237","line":20,"column":9,"nodeType":"238","endLine":20,"endColumn":58},{"ruleId":"300","severity":1,"message":"301","line":1,"column":1,"nodeType":"302","messageId":"303","fix":"304"},{"ruleId":"241","replacedBy":"305"},{"ruleId":"243","replacedBy":"306"},{"ruleId":"236","severity":1,"message":"237","line":11,"column":9,"nodeType":"238","endLine":11,"endColumn":68},{"ruleId":"241","replacedBy":"307"},{"ruleId":"243","replacedBy":"308"},{"ruleId":"259","severity":1,"message":"309","line":3,"column":8,"nodeType":"261","messageId":"262","endLine":3,"endColumn":11},{"ruleId":"236","severity":1,"message":"237","line":11,"column":9,"nodeType":"238","endLine":11,"endColumn":46},{"ruleId":"286","severity":1,"message":"287","line":17,"column":1,"nodeType":"288","endLine":60,"endColumn":3},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatData', 'conversationPartner._id', 'messages', and 'user'. Either include them or remove the dependency array.","ArrayExpression",["310"],"React Hook useEffect has a missing dependency: 'scrollToBottom'. Either include it or remove the dependency array.",["311"],"React Hook useEffect has missing dependencies: 'props' and 'scrollToBottom'. Either include them or remove the dependency array.",["312"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'props', 'user._id', and 'user.currentChatId'. Either include them or remove the dependency array.",["313"],"no-native-reassign",["314"],"no-negated-in-lhs",["315"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["316"],["314"],["315"],"React Hook useEffect has missing dependencies: 'getMatch' and 'user'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'getMatch' and 'props'. Either include them or remove the dependency array.",["318"],["314"],["315"],"React Hook useEffect has a missing dependency: 'handleMessagesListening'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'handleMessagesListening', 'handleNotifications', and 'props'. Either include them or remove the dependency array.",["320"],"no-unused-vars","'setUserData' is assigned a value but never used.","Identifier","unusedVar",["321"],["314"],["315"],["322"],["314"],["315"],["314"],["315"],["314"],["315"],["314"],["315"],["314"],["315"],"React Hook useEffect has missing dependencies: 'history', 'setUserData', and 'user'. Either include them or remove the dependency array. If 'setUserData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["323"],["314"],["315"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["314"],["315"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["314"],["315"],["314"],["315"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener",["314"],["315"],["314"],["315"],"'Badge' is defined but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"324","text":"325"},["314"],["315"],["314"],["315"],"'api' is defined but never used.",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},"no-global-assign","no-unsafe-negation",{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"334","fix":"344"},{"desc":"334","fix":"345"},{"desc":"346","fix":"347"},[-1,0],"","Update the dependencies array to be: [chatData, chatData.matches, conversationPartner._id, messages, user]",{"range":"348","text":"349"},"Update the dependencies array to be: [messages, scrollToBottom]",{"range":"350","text":"351"},"Update the dependencies array to be: [props, scrollToBottom]",{"range":"352","text":"353"},"Update the dependencies array to be: [props, user._id, user.currentChatId]",{"range":"354","text":"355"},"Update the dependencies array to be: [props]",{"range":"356","text":"357"},"Update the dependencies array to be: [getMatch, user, user.currentChatId]",{"range":"358","text":"359"},"Update the dependencies array to be: [getMatch, props]",{"range":"360","text":"361"},"Update the dependencies array to be: [handleMessagesListening, user.currentChatId]",{"range":"362","text":"363"},"Update the dependencies array to be: [handleMessagesListening, handleNotifications, props]",{"range":"364","text":"365"},{"range":"366","text":"357"},{"range":"367","text":"357"},"Update the dependencies array to be: [history, setUserData, user]",{"range":"368","text":"369"},[2713,2731],"[chatData, chatData.matches, conversationPartner._id, messages, user]",[2836,2846],"[messages, scrollToBottom]",[2927,2929],"[props, scrollToBottom]",[1863,1865],"[props, user._id, user.currentChatId]",[879,881],"[props]",[1873,1893],"[getMatch, user, user.currentChatId]",[2092,2094],"[getMatch, props]",[2113,2133],"[handleMessagesListening, user.currentChatId]",[2245,2247],"[handleMessagesListening, handleNotifications, props]",[2158,2160],[908,910],[2525,2527],"[history, setUserData, user]"]